package ex03_class;

public class Car {
	int wheel = 4; // 필드선언
	int door = 4;
	int window = 4;
	String brandString = "현대";
	int price = 4000;
	
	//정수 -> 0
	//실수 -> 0.0
	//배열, 다른 클래스 -> null
	
	//값을 초기화하는건 가능하지만,
	//선언후 나중에 주는것은 불가능하다.
	//wheel =4;
	
	public void ride() {
		System.out.println("달립니다.");
	}
	
	
	//함수의 작동 원리
	//1. 메서드를 호출하면 블록 안에 잇는 코드들이 순차적으로
	//모두 실행되고 경우에 따라 실행한 결과를 호출한쪽으로 돌려준다.
	//'반환한다'라고 표현하고, 반환하는 결과값을 '반환값'이라고 한다.
	//반환값이 있을 경우 반환할 데이터의 타입이 무엇인지 메서드명 앞에
	//반환값의 자료형을 기재해줘야 한다.
	//반환형은 메서드가 처음부터 끝까지 수행을 마친 후에
	//반환해야 할 값이 있을 경우에 기입
	//int, boolean 등 기본자료형을 포함하여 String 과 같은
	//클래스도 간으하고 사용자가 만든 객체도 반환이 가능하다.
	//아무것도 반환하지 않을 때는 void 라고 적는다.
	
	//메서도 이름 짓기
	//메서드의 이름은 그 기능을 명확하게 설명해 줄수 있게 작성하는 것이 좋다.
	
	//생성자(constructor)
	//객체를 생성할때 반드시 호출해야한느 특수한 기능을 하는 메서드이다
	//객체를 생성하면서 객체 변수를 초기화하는 역활을 하기 때문에 생성자라고 부른다.
	//생성자 -> 클래스명과 동일, 객체생성시에만 호출 가능. 반환형 x
	//메서드 -> 다양한 이름, 언제든지 호출가능 , 반환형 o
	
	//선언한적이 없는 생성자를 호출할수 있는 이유는
	//기본 생성자가 자동으로 생성되고 우리 눈에만 보이지 않기 때문이다
	
	//생성자 선언하기
	//기본 생성자를 선언하지 않으면 jvm 이 자동으로 쇙성을 해준다.
	public Car() { //--> 기본생성자
		
	}
	
	//필드와 메서드를 호출하는 등 객체를 사용하기 위해서
	//메모리에 올라가야 하는데, 메모리에 객체를 올려주는
	//역활을 한다.
	
	
	
}//end class


//클래스에 들어가는 세가지 요소
//필드, 메서드, 생성자






